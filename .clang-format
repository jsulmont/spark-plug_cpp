---
# clang-format configuration for sparkplug_cpp
# Based on LLVM style with customizations for modern C++-23

BasedOnStyle: LLVM

# Language and standard
Language: Cpp
Standard: c++20  # clang-format doesn't have c++23 yet, use c++20

# Indentation
IndentWidth: 2
TabWidth: 2
UseTab: Never
AccessModifierOffset: -2
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4
IndentCaseLabels: false
IndentPPDirectives: AfterHash
IndentWrappedFunctionNames: false

# Line width
ColumnLimit: 100

# Braces
BreakBeforeBraces: Attach  # K&R style - opening brace on same line
Cpp11BracedListStyle: true

# Spacing
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: true
SpaceBeforeAssignmentOperators: true
SpaceBeforeCpp11BracedList: false
SpaceBeforeParens: ControlStatements
SpaceInEmptyParentheses: false
SpacesInAngles: Never
SpacesInCStyleCastParentheses: false
SpacesInContainerLiterals: false
SpacesInParentheses: false
SpacesInSquareBrackets: false

# Alignment
AlignAfterOpenBracket: Align
AlignConsecutiveAssignments: false
AlignConsecutiveDeclarations: false
AlignConsecutiveMacros: false
AlignEscapedNewlines: Right
AlignOperands: true
AlignTrailingComments: true

# Breaking
AllowShortBlocksOnASingleLine: Never
AllowShortCaseLabelsOnASingleLine: false
AllowShortFunctionsOnASingleLine: None
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: false
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: false
AlwaysBreakTemplateDeclarations: Yes
BinPackArguments: true
BinPackParameters: true
BreakBeforeBinaryOperators: None
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: BeforeColon
BreakInheritanceList: BeforeColon
BreakStringLiterals: true

# Includes
IncludeBlocks: Regroup
IncludeCategories:
  # Project headers (sparkplug/*)
  - Regex:           '^"sparkplug/'
    Priority:        1
  # Local headers ("*.hpp")
  - Regex:           '^"'
    Priority:        2
  # System C++ headers (<vector>, <string>, etc.)
  - Regex:           '^<[a-z_]+>'
    Priority:        3
  # Third-party libraries (<MQTTAsync.h>, <absl/*, <google/protobuf/*, etc.)
  - Regex:           '^<'
    Priority:        4
SortIncludes: true

# Pointers and references
DerivePointerAlignment: false
PointerAlignment: Left

# Namespaces
CompactNamespaces: false
FixNamespaceComments: true
NamespaceIndentation: None

# Comments
ReflowComments: true

# Penalties (fine-tuning for better formatting)
PenaltyBreakAssignment: 2
PenaltyBreakBeforeFirstCallParameter: 19
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakString: 1000
PenaltyExcessCharacter: 1000000
PenaltyReturnTypeOnItsOwnLine: 60

# Other
KeepEmptyLinesAtTheStartOfBlocks: false
MaxEmptyLinesToKeep: 1
SortUsingDeclarations: true
